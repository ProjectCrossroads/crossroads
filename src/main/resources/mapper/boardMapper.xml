<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crossroads.app.mapper.BoardMapper">
    <!--어드민 검색-->
    <sql id="searchAdmin">
        <if test="keyword != null">
            <trim prefix="and (" suffix=")" prefixOverrides="or">
                or m.member_name like concat('%', #{keyword}, '%')
                or b.board_title like concat('%', #{keyword}, '%')
                or b.board_content like concat('%', #{keyword}, '%')
            </trim>
        </if>
    </sql>
    <!-- 어드민 목록 총 개수 -->
    <select id="selectCountAllAdmin" resultType="int">
        select count(board_id)
        from tbl_member m join tbl_board b
        on m.member_id = b.member_id
        <include refid="searchAdmin"/>
    </select>

    <!-- 어드민 목록 조회 -->
    <select id="selectAllAdmin" resultType="boardDTO">
        select b.board_id , m.member_name , b.board_title , b.board_content , b.board_register_date
        from tbl_member m join tbl_board b
            on m.member_id = b.member_id
            <include refid="searchAdmin"/>
        order by b.board_id desc
        limit #{criteria.offset}, #{criteria.amount}
    </select>

    <delete id="deleteAdmin">
        delete from tbl_board
        where board_id = #{boardId}
    </delete>

    <select id="selectAll" resultType="boardDTO">
        select b.board_id , m.member_name , b.board_title , b.board_content , b.board_register_date
        from tbl_member m join tbl_board b
        on m.member_id = b.member_id
        order by b.board_id desc
    </select>

    <!-- 마이페이지 게시글 목록 -->
    <select id="selectAllMy" resultType="boardDTO">
        select b.board_id , m.member_name , board_title , board_content , board_register_date,
        	   file_id, file_original_name, file_uuid, file_path, file_size, f.board_id
        from tbl_member m join tbl_board b
       	on m.member_id = b.member_id
       	join tbl_board_file f on b.board_id = f.board_id
		order by b.board_id desc
        limit #{standards.offset}, #{standards.rowCount}
    </select>

    <!-- 마이페이지 게시글 페이징 전제 개수 -->
    <select id="selectTotalMy" resultType="int">
        select count(board_id) from tbl_board
    </select>


    <!--자유 게시글 전체 조회-->
    <select id="selectAllBoards" resultType="boardDTO">
      SELECT B.board_id, B.board_title, B.board_content,B.board_register_date,B.board_update_date,B.board_read_count,
             M.member_name, F.file_uuid, F.file_path
      FROM tbl_board B
      LEFT JOIN tbl_member M ON B.member_id = M.member_id
      LEFT JOIN tbl_file F ON B.board_id = F.board_id
      ORDER BY B.board_register_date DESC
    </select>

    <!-- 상세 조회 -->
    <select id="select" resultType="boardDTO">
        select b.board_id, board_title, board_content, b.member_id, board_register_date, board_update_date, board_read_count
        member_identification, member_name, member_phone, member_email, member_file_system_name, member_type, member_drive_register_date, member_point
        from tbl_member m join tbl_board b
        on m.member_id = b.member_id
        and board_id = #{boardId}
    </select>

    <!--회원별 게시글 조회-->
    <select id="selectByMemberId" resultType="boardDTO">
        select b.board_id, board_title, board_content, b.member_id, board_register_date, board_update_date, board_read_count
        member_identification, member_name, member_phone, member_email, member_file_system_name, member_type, member_drive_register_date, member_point
        from tbl_member m join tbl_board b
        on m.member_id = b.member_id
        and m.member_id = #{memberId}
    </select>

    <!--회원별 게시글 삭제-->
    <delete id="deleteByMemberId">
        delete from tbl_board
        where member_id = #{memberId}
    </delete>

<!--게시판 목록 전체조회-->
    <select id="selectBoardAll" resultType="boardDTO">
      SELECT B.board_id, B.board_title, B.board_content,B.board_register_date,B.board_update_date,B.board_read_count,
             M.member_name, F.file_uuid, F.file_path
      FROM tbl_board B
      LEFT JOIN tbl_member M ON B.member_id = M.member_id
      LEFT JOIN tbl_file F ON B.board_id = F.board_id
      ORDER BY B.board_register_date DESC
    </select>
    <!-- 게시물 작성 -->
    <insert id="insert" >
    INSERT INTO tbl_board (member_id, board_title, board_content)
    VALUES (#{memberId}, #{reviewTitle}, #{reviewContent})
  </insert>

<!--게시판 조회순-->
    <!--<select id="selectBoardAll" resultType="boardDTO">
      SELECT B.board_id, B.board_title, B.board_content,B.board_register_date,B.board_update_date,B.board_read_count,
             M.member_name, F.file_uuid, F.file_path
      FROM tbl_board B
      LEFT JOIN tbl_member M ON B.member_id = M.member_id
      LEFT JOIN tbl_file F ON B.board_id = F.board_id
      ORDER BY B.board_read_count DESC
    </select>-->



</mapper>