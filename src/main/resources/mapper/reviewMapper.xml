<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crossroads.app.mapper.ReviewMapper">
    <select id="selectAll" parameterType="long" resultType="reviewDTO">
        select
           m.member_id, member_file_system_name,
           a.apply_id, apply_location, apply_date, apply_register_date, starter_member_id, veteran_member_id, apply_status,
           review_id, r.member_id, review_register_date, review_update_date, review_title, review_content, review_file_system_name, review_grade, r.apply_id
        FROM tbl_member m
        join tbl_review r on m.member_id = r.member_id
        join tbl_apply a on r.apply_id = a.apply_id
        where m.member_id = #{memberId}
        order by apply_register_date desc
    </select>
    <!-- 마이페이지 후기 목록 -->
    <!--후기 목록 전체 리스트-->
    <select id="selectReviewAll" resultType="reviewDTO">
        select m.member_id, member_identification, member_password, member_name, member_phone, member_email, member_file_system_name, member_type, member_drive_register_date, member_point,
        a.apply_id, apply_course, apply_location, apply_date, apply_register_date, starter_member_id, veteran_member_id, apply_status,
        review_id, r.member_id, review_register_date, review_update_date, review_title, review_content, review_file_system_name, review_grade, r.apply_id
        from tbl_member m join tbl_review r on m.member_id = r.member_id
	    join tbl_apply a on r.apply_id = a.apply_id
	    order by review_id desc
    </select>
<!-- 후기 목록 페이징처리 -->
    <select id="getListReview" resultType="reviewDTO">
        select m.member_id, member_identification, member_password, member_name, member_phone, member_email, member_file_system_name, member_type, member_drive_register_date, member_point,
        a.apply_id, apply_course, apply_location, apply_date, apply_register_date, starter_member_id, veteran_member_id, apply_status,
        review_id, r.member_id, review_register_date, review_update_date, review_title, review_content, review_file_system_name, review_grade, r.apply_id
        from tbl_member m join tbl_review r on m.member_id = r.member_id
	    join tbl_apply a on r.apply_id = a.apply_id
	    order by review_id desc
	    LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(review_id) FROM tbl_review
    </select>

    <delete id="delete">
        delete from tbl_review
        where review_id = #{reviewId}
    </delete>

    <!-- 후기 작성-->
    <insert id="insert" >
    INSERT INTO tbl_review (member_id, review_title, review_content, review_file_system_name, review_grade, apply_id)
    VALUES (#{memberId}, #{reviewTitle}, #{reviewContent}, #{reviewFileSystemName}, #{reviewGrade}, #{applyId})
  </insert>

    <!--업데이트-->
    <update id="update">
    UPDATE tbl_review
    SET review_title = #{reviewTitle},
        review_content = #{reviewContent},
        review_file_system_name = #{reviewFileSystemName},
        review_grade = #{reviewGrade},
        review_update_date = NOW()
    WHERE review_id = #{reviewId}
  </update>

    <select id="select" resultType="reviewVO">
        select review_title,
                review_content,
                review_file_system_name,
                review_grade
         from tbl_review
        where review_id = #{reviewId}
    </select>

</mapper>